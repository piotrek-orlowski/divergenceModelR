% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/divergencePricing.R
\name{divergenceSwapRate}
\alias{divergenceSwapRate}
\alias{skewSwapRate}
\alias{quartSwapRate}
\title{Divergence pricing}
\usage{
divergenceSwapRate(p, params.Q, t.vec, vol.mat,
  jumpTransform = getPointerToJumpTransform("expNormJumpTransform"),
  mod.type, ...)

skewSwapRate(p, params.Q, t.vec, vol.mat, jumpTransform, mod.type, ...)

quartSwapRate(p, params.Q, t.vec, vol.mat, jumpTransform, mod.type, ...)
}
\arguments{
\item{p}{divergence power. For skewness and kurtosis contracts, expansions will be taken around the Dp divergence.}

\item{params.Q}{Q measure parameters}

\item{t.vec}{T-length vector of divergence swap maturities}

\item{vol.mat}{S x N.factors matrix of variance states}

\item{...}{further arguments to ODE solvers}
}
\value{
S x T matrix of divergence swap prices
}
\description{
Calculation of prices of divergence swaps, divergence-based skewness and kurtosis swaps. All swaps are scale-free, that is they are swaps on the return. The \code{_base} functions calculate prices of components: unscaled divergence, unscaled \eqn{x^p \log{x}} divergence, unscaled \eqn{x^p \log^2{x}} divergence.
}
