% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/momentCondition.R
\name{momentCondition}
\alias{momentCondition}
\title{This function calculates the general iterative moment condition that can be used for moment based model calibration. Futures prices (with some long expiry) are assumed for the stock!}
\usage{
momentCondition(params.P, params.Q, condition.struct,
  conditional = FALSE, atol = 1e-30, rtol = 1e-12, rtol.Q = rtol,
  N.factors = (length(params.P) - 1),
  jumpTransform = getPointerToJumpTransform("expNormJumpTransform")$TF,
  mod.type = "standard", ...)
}
\arguments{
\item{params.P}{a list of structures that describe the P behaviour of the volatility factors + underlying jumps}

\item{params.Q}{a list of structures that describe the Q behaviour of the volatility factors + underlying jumps}

\item{condition.struct}{a list containing the data frames of relative timings, the frequency + maturity pairs and the required powers  / combination coefficients / linear transformation matrix}

\item{atol}{absolute tolerance required of the solution (this should be set very low in general)}

\item{rtol}{relative tolerance required of the solution (the number of correct digits we require)}

\item{...}{further arguments passed to \code{\link{twoFactorJumpODEsSolveP}}}
}
\value{
Returns the value (unconditional P expectation) of the specified product.
}
\description{
This function calculates the general iterative moment condition that can be used for moment based model calibration. Futures prices (with some long expiry) are assumed for the stock!
}
